pipeline {
    agent any
    
    environment {
        FIREBASE_PROJECT = credentials('firebase-project-id')
        GOOGLE_APPLICATION_CREDENTIALS = credentials('firebase-service-account-key')
    }
    
    triggers {
        githubPush()
    }
    
    stages {
        stage('Checkout') {
            steps {
                script {
                    echo "checkout..."
                }
                
                // Checkout source code from main branch
                checkout scm
                
                script {
                    // Get commit information for notifications
                    env.GIT_COMMIT_MSG = sh(
                        script: 'git log -1 --pretty=%B',
                        returnStdout: true
                    ).trim()
                    env.GIT_AUTHOR = sh(
                        script: 'git log -1 --pretty=%an',
                        returnStdout: true
                    ).trim()
                    env.GIT_COMMIT_SHORT = sh(
                        script: 'git rev-parse --short HEAD',
                        returnStdout: true
                    ).trim()
                }
                
                echo "‚úÖ Checkout completed successfully"
            }
        }
        
        stage('Setup Firebase') {
            steps {
                script {
                    echo "üîß Setting up Firebase CLI..."
                }
                
                // Install Firebase CLI and dependencies
                sh '''
                    # Update package manager
                    sudo apt-get update
                    
                    # Install Python3 and pip if not available
                    sudo apt-get install python3-pip -y
                    
                    # Install Node.js 18.x
                    curl -fsSL https://deb.nodesource.com/setup_18.x | sudo bash -
                    sudo apt-get install -y nodejs
                    
                    # Install Firebase CLI globally
                    sudo npm install -g firebase-tools
                    
                    # Verify installations
                    node --version
                    npm --version
                    firebase --version
                '''
                
                echo "‚úÖ Firebase CLI setup completed"
            }
        }
        
        stage('Deploy') {
            steps {
                script {
                    echo "Starting deployment to Firebase Hosting..."
                    echo "Target project: ${FIREBASE_PROJECT}"
                }
                
                // Deploy to Firebase Hosting
                sh '''
                    # Set Google Application Credentials
                    export GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}
                    
                    # Deploy to Firebase Hosting
                    firebase deploy --only hosting --project=${FIREBASE_PROJECT} --non-interactive
                '''
                
                script {
                    echo "Deployment completed successfully!"
                }
            }
        }
    }
    
    post {
        success {
            script {
                echo "Deployment SUCCESS! Sending email notification..."
                
                emailext (
                    subject: "‚úÖ Firebase Deploy Success - ${FIREBASE_PROJECT}",
                    body: """
                        <h2 style="color: #28a745;">üéâ Firebase Deployment Successful!</h2>
                    """,
                    mimeType: 'text/html',
                    to: '${DEFAULT_RECIPIENTS}'
                )
            }
        }
        
        failure {
            script {
                echo "Deployment FAILED! Sending email notification..."
                
                emailext (
                    subject: "‚ùå Firebase Deploy Failed - ${FIREBASE_PROJECT}",
                    body: """
                        <h2 style="color: #dc3545;">‚ùå Firebase Deployment Failed!</h2>
                    """,
                    mimeType: 'text/html',
                    to: '${DEFAULT_RECIPIENTS}'
                )
            }
        }
        
        always {
            script {
                echo "üßπ Cleaning up workspace..."
            }
            
            cleanWs()
        }
    }
}