pipeline {
    agent any
    
    environment {
        FIREBASE_PROJECT = credentials('firebase-project-id')
        GOOGLE_APPLICATION_CREDENTIALS = credentials('firebase-service-account-key')
    }
    
    triggers {
        githubPush()
    }
    
    stages {
        stage('Checkout') {
            steps {
                script {
                    echo "checkout..."
                }
                
                // Checkout source code from main branch
                checkout scm
                
                script {
                    // Get commit information for notifications
                    env.GIT_COMMIT_MSG = sh(
                        script: 'git log -1 --pretty=%B',
                        returnStdout: true
                    ).trim()
                    env.GIT_AUTHOR = sh(
                        script: 'git log -1 --pretty=%an',
                        returnStdout: true
                    ).trim()
                    env.GIT_COMMIT_SHORT = sh(
                        script: 'git rev-parse --short HEAD',
                        returnStdout: true
                    ).trim()
                }
                
                echo "âœ… Checkout completed successfully"
            }
        }

        stage('Deploy') {
            steps {
                script {
                    echo "Starting deployment to Firebase Hosting..."
                    echo "Target project: ${FIREBASE_PROJECT}"
                }
                
                // Deploy to Firebase Hosting
                sh '''
                    # Set Google Application Credentials
                    export GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}
                    
                    # Authenticate with Firebase (non-interactive)
                    firebase login:ci --interactive false || echo "Already authenticated"
                    
                    # Deploy to Firebase Hosting
                    firebase deploy --only hosting --project=${FIREBASE_PROJECT} --non-interactive
                '''
                
                script {
                    echo "Deployment completed successfully!"
                }
            }
        }
        
 }
}